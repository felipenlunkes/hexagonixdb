<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="br.lunx.hexagonixdb.hexagonixDB.repository.HexagonixBugfixRepositoryTest" tests="2" skipped="0" failures="0" errors="0" timestamp="2024-04-04T05:43:19" hostname="lunx" time="0.681">
  <properties/>
  <testcase name="shouldSaveHexagonixBugfixEntity()" classname="br.lunx.hexagonixdb.hexagonixDB.repository.HexagonixBugfixRepositoryTest" time="0.656"/>
  <testcase name="shouldFindBugfixById()" classname="br.lunx.hexagonixdb.hexagonixDB.repository.HexagonixBugfixRepositoryTest" time="0.023"/>
  <system-out><![CDATA[02:42:52.764 [Test worker] INFO org.testcontainers.images.PullPolicy -- Image pull policy will be performed by: DefaultPullPolicy()
02:42:52.771 [Test worker] INFO org.testcontainers.utility.ImageNameSubstitutor -- Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
02:42:52.888 [Test worker] INFO org.testcontainers.dockerclient.DockerClientProviderStrategy -- Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
02:42:53.169 [Test worker] INFO org.testcontainers.dockerclient.DockerClientProviderStrategy -- Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
02:42:53.171 [Test worker] INFO org.testcontainers.DockerClientFactory -- Docker host IP address is localhost
02:42:53.185 [Test worker] INFO org.testcontainers.DockerClientFactory -- Connected to docker: 
  Server Version: 24.0.5
  API Version: 1.43
  Operating System: Ubuntu 23.10
  Total Memory: 11843 MB
02:42:53.212 [Test worker] INFO tc.testcontainers/ryuk:0.6.0 -- Creating container for image: testcontainers/ryuk:0.6.0
02:42:53.216 [Test worker] INFO org.testcontainers.utility.RegistryAuthLocator -- Failure when attempting to lookup auth config. Please ignore if you don't have images in an authenticated registry. Details: (dockerImageName: testcontainers/ryuk:0.6.0, configFile: /home/felipelunkes/.docker/config.json, configEnv: DOCKER_AUTH_CONFIG). Falling back to docker-java default behaviour. Exception message: Status 404: No config supplied. Checked in order: /home/felipelunkes/.docker/config.json (file not found), DOCKER_AUTH_CONFIG (not set)
02:42:53.360 [Test worker] INFO tc.testcontainers/ryuk:0.6.0 -- Container testcontainers/ryuk:0.6.0 is starting: be4ef137ed30d8b2020dbcb6996c3714b6f6418446330ebb43bcbedc542cdb9e
02:42:53.685 [Test worker] INFO tc.testcontainers/ryuk:0.6.0 -- Container testcontainers/ryuk:0.6.0 started in PT0.472942022S
02:42:53.689 [Test worker] INFO org.testcontainers.utility.RyukResourceReaper -- Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
02:42:53.690 [Test worker] INFO org.testcontainers.DockerClientFactory -- Checking the system...
02:42:53.690 [Test worker] INFO org.testcontainers.DockerClientFactory -- ✔︎ Docker server version should be at least 1.6.0
02:42:53.693 [Test worker] INFO tc.mysql:8 -- Creating container for image: mysql:8
02:42:53.724 [Test worker] INFO tc.mysql:8 -- Container mysql:8 is starting: 4df3d503da9afc04aeab4ab721e3fa12079222cd06427980b4b1cac153c1a890
02:42:54.018 [Test worker] INFO tc.mysql:8 -- Waiting for database connection to become available at jdbc:mysql://localhost:33013/test using query 'SELECT 1'
02:43:04.685 [Test worker] INFO tc.mysql:8 -- Container mysql:8 started in PT10.992154756S
02:43:04.685 [Test worker] INFO tc.mysql:8 -- Container is started (JDBC URL: jdbc:mysql://localhost:33013/test)
02:43:04.752 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [br.lunx.hexagonixdb.hexagonixDB.repository.HexagonixBugfixRepositoryTest]: HexagonixBugfixRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
02:43:04.866 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration br.lunx.hexagonixdb.hexagonixDB.HexagonixDbApplication for test class br.lunx.hexagonixdb.hexagonixDB.repository.HexagonixBugfixRepositoryTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.4)

2024-04-04T02:43:05.169-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] b.l.h.h.r.HexagonixBugfixRepositoryTest  : Starting HexagonixBugfixRepositoryTest using Java 21.0.2 with PID 161824 (started by felipelunkes in /home/felipelunkes/Documentos/GitHub/hexagonixdb)
2024-04-04T02:43:05.171-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] b.l.h.h.r.HexagonixBugfixRepositoryTest  : No active profile set, falling back to 1 default profile: "default"
2024-04-04T02:43:05.823-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-04T02:43:05.824-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2024-04-04T02:43:05.853-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface br.lunx.hexagonixdb.hexagonixDB.repository.HexagonixBugfixRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-04-04T02:43:05.854-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface br.lunx.hexagonixdb.hexagonixDB.repository.HexagonixBuildRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-04-04T02:43:05.855-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface br.lunx.hexagonixdb.hexagonixDB.repository.HexagonixReleaseRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-04-04T02:43:05.857-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface br.lunx.hexagonixdb.hexagonixDB.repository.HexagonixVersionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-04-04T02:43:05.858-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 29 ms. Found 0 JDBC repository interfaces.
2024-04-04T02:43:05.873-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-04T02:43:05.874-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-04-04T02:43:05.890-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface br.lunx.hexagonixdb.hexagonixDB.repository.HexagonixBuildRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-04-04T02:43:05.891-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface br.lunx.hexagonixdb.hexagonixDB.repository.HexagonixReleaseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-04-04T02:43:05.915-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 36 ms. Found 2 JPA repository interfaces.
2024-04-04T02:43:06.382-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] tc.mysql:latest                          : Creating container for image: mysql:latest
2024-04-04T02:43:06.442-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] tc.mysql:latest                          : Container mysql:latest is starting: 2af8e3b3714ea962035c34d013ee049a004362ad1ca7dd49013dddb63c73892e
2024-04-04T02:43:06.690-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] tc.mysql:latest                          : Waiting for database connection to become available at jdbc:mysql://localhost:33014/test using query 'SELECT 1'
2024-04-04T02:43:16.392-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] tc.mysql:latest                          : Container mysql:latest started in PT10.010751165S
2024-04-04T02:43:16.393-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] tc.mysql:latest                          : Container is started (JDBC URL: jdbc:mysql://localhost:33014/test)
2024-04-04T02:43:16.695-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2024-04-04T02:43:16.695-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2024-04-04T02:43:16.695-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] o.f.c.internal.license.VersionPrinter    : 
2024-04-04T02:43:16.726-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] org.flywaydb.core.FlywayExecutor         : Database: jdbc:mysql://localhost:33014/test (MySQL 8.3)
2024-04-04T02:43:16.757-03:00  WARN 161824 --- [hexagonixDB] [    Test worker] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: MySQL 8.3 is newer than this version of Flyway and support has not been tested. The latest supported version of MySQL is 8.0.
2024-04-04T02:43:16.775-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] o.f.c.i.s.JdbcTableSchemaHistory         : Schema history table `test`.`flyway_schema_history` does not exist yet
2024-04-04T02:43:16.778-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] o.f.core.internal.command.DbValidate     : Successfully validated 3 migrations (execution time 00:00.014s)
2024-04-04T02:43:16.852-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] o.f.c.i.s.JdbcTableSchemaHistory         : Creating Schema History table `test`.`flyway_schema_history` ...
2024-04-04T02:43:16.905-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] o.f.core.internal.command.DbMigrate      : Current version of schema `test`: << Empty Schema >>
2024-04-04T02:43:16.910-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] o.f.core.internal.command.DbMigrate      : Migrating schema `test` to version "1 - create hexagonix bugfix table"
2024-04-04T02:43:16.947-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] o.f.core.internal.command.DbMigrate      : Migrating schema `test` to version "2 - create hexagonix version table"
2024-04-04T02:43:16.982-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] o.f.core.internal.command.DbMigrate      : Migrating schema `test` to version "3 - create version has fix table"
2024-04-04T02:43:17.014-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] o.f.core.internal.command.DbMigrate      : Successfully applied 3 migrations to schema `test`, now at version v3 (execution time 00:00.041s)
2024-04-04T02:43:17.058-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-04-04T02:43:17.081-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5ca86715
2024-04-04T02:43:17.082-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-04-04T02:43:17.112-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-04-04T02:43:17.148-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.4.Final
2024-04-04T02:43:17.171-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-04-04T02:43:17.344-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-04-04T02:43:18.044-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-04-04T02:43:18.051-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-04-04T02:43:18.168-03:00  WARN 161824 --- [hexagonixDB] [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-04-04T02:43:19.013-03:00  INFO 161824 --- [hexagonixDB] [    Test worker] b.l.h.h.r.HexagonixBugfixRepositoryTest  : Started HexagonixBugfixRepositoryTest in 14.036 seconds (process running for 27.019)
]]></system-out>
  <system-err><![CDATA[WARNING: A Java agent has been loaded dynamically (/home/felipelunkes/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy-agent/1.14.12/be4984cb6fd1ef1d11f218a648889dfda44b8a15/byte-buddy-agent-1.14.12.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
</testsuite>
